/*
 * Copyright (c) 2017 MediaTek Inc.
 * Author: Eddie Huang <eddie.huang@mediatek.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#include <dt-bindings/gpio/gpio.h>
#include "mt2712.dtsi"

/ {
	model = "MediaTek MT2712m1v1 board";
	compatible = "mediatek,mt2712m1v1", "mediatek,mt2712";

	memory@40000000 {
		device_type = "memory";
		reg = <0 0x40000000 0 0x80000000>;
	};

	mmc_fixed_3v3: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "mmc_power";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
		regulator-always-on;
	};

	mmc_fixed_1v8_io: fixedregulator@1 {
		compatible = "regulator-fixed";
		regulator-name = "mmc_io";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		enable-active-high;
		regulator-always-on;
	};

	mmc1_vqmmc: gpio-regulator@0 {
		compatible = "regulator-gpio";
		regulator-name = "mmc1_vqmmc";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		gpios = <&pio 67 GPIO_ACTIVE_HIGH>;
		states = <1800000 0x0
			  3300000 0x1>;
		startup-delay-us = <5000>;
		enable-active-high;
		regulator-always-on;
	};

	mmc2_vqmmc: gpio-regulator@1 {
		compatible = "regulator-gpio";
		regulator-name = "mmc2_vqmmc";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		gpios = <&pio 96 GPIO_ACTIVE_HIGH>;
		states = <1800000 0x0
			  3300000 0x1>;
		startup-delay-us = <5000>;
		enable-active-high;
		regulator-always-on;
	};

};

&auxadc {
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;
	status = "okay";
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	status = "okay";
};

&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins>;
	status = "okay";
};

&i2c3 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c3_pins>;
	status = "okay";
};

&i2c4 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c4_pins>;
	status = "okay";
};

&i2c5 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c5_pins>;
	status = "okay";
};

&mmc1 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_uhs>;
	status = "okay";
	bus-width = <4>;
	max-frequency = <200000000>;
	cap-sd-highspeed;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	cd-gpios = <&pio 70 0>;
	vmmc-supply = <&mmc_fixed_3v3>;
	vqmmc-supply = <&mmc1_vqmmc>;
	assigned-clocks = <&topckgen CLK_TOP_MSDC30_1_SEL>;
	assigned-clock-parents = <&topckgen CLK_TOP_MSDCPLL_D2>;
};

&mmc2 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc2_pins_default>;
	pinctrl-1 = <&mmc2_pins_uhs>;
	status = "okay";
	bus-width = <4>;
	max-frequency = <200000000>;
	cap-sd-highspeed;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	cd-gpios = <&pio 94 0>;
	vmmc-supply = <&mmc_fixed_3v3>;
	vqmmc-supply = <&mmc2_vqmmc>;
	assigned-clocks = <&topckgen CLK_TOP_MSDC30_1_SEL>;
	assigned-clock-parents = <&topckgen CLK_TOP_MSDCPLL_D2>;
};

&mmc3 {
	status = "okay";
	bus-width = <4>;
	max-frequency = <200000000>;
	cap-sd-highspeed;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
};

&nor_flash {
	pinctrl-names = "default";
	status = "okay";
	flash@0 {
		compatible = "jedec,spi-nor";
		reg = <0>;
	};
};

&pcie0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pcie_pinctl0>;
};

&pio {
	i2c0_pins: i2c0 {
		pins_bus {
			pinmux = <MT2712_PIN_105_I2C_SDA0__FUNC_SDA0>,
				 <MT2712_PIN_111_I2C_SCL0__FUNC_SCL0>;
			bias-disable;
		};
	};

	i2c1_pins: i2c1 {
		pins_bus {
			pinmux = <MT2712_PIN_106_I2C_SDA1__FUNC_SDA1>,
				 <MT2712_PIN_112_I2C_SCL1__FUNC_SCL1>;
			bias-disable;
		};
	};

	i2c2_pins: i2c2 {
		pins_bus {
			pinmux = <MT2712_PIN_107_I2C_SDA2__FUNC_SDA2>,
				 <MT2712_PIN_113_I2C_SCL2__FUNC_SCL2>;
			bias-disable;
		};
	};

	i2c3_pins: i2c3 {
		pins_bus {
			pinmux = <MT2712_PIN_108_I2C_SDA3__FUNC_SDA3>,
				 <MT2712_PIN_114_I2C_SCL3__FUNC_SCL3>;
			bias-disable;
		};
	};

	i2c4_pins: i2c4 {
		pins_bus {
			pinmux = <MT2712_PIN_109_I2C_SDA4__FUNC_SDA4>,
				 <MT2712_PIN_115_I2C_SCL4__FUNC_SCL4>;
			bias-disable;
		};
	};

	i2c5_pins: i2c5 {
		pins_bus {
			pinmux = <MT2712_PIN_110_I2C_SDA5__FUNC_SDA5>,
				 <MT2712_PIN_116_I2C_SCL5__FUNC_SCL5>;
			bias-disable;
		};
	};

	mmc0_pins_default: mmc0default {
		pins_cmd_dat {
			pinmux = <MT2712_PIN_45_MSDC0E_DAT0__FUNC_MSDC0_DAT0>,
				 <MT2712_PIN_44_MSDC0E_DAT1__FUNC_MSDC0_DAT1>,
				 <MT2712_PIN_43_MSDC0E_DAT2__FUNC_MSDC0_DAT2>,
				 <MT2712_PIN_42_MSDC0E_DAT3__FUNC_MSDC0_DAT3>,
				 <MT2712_PIN_41_MSDC0E_DAT4__FUNC_MSDC0_DAT4>,
				 <MT2712_PIN_40_MSDC0E_DAT5__FUNC_MSDC0_DAT5>,
				 <MT2712_PIN_39_MSDC0E_DAT6__FUNC_MSDC0_DAT6>,
				 <MT2712_PIN_38_MSDC0E_DAT7__FUNC_MSDC0_DAT7>,
				 <MT2712_PIN_46_MSDC0E_CMD__FUNC_MSDC0_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT2712_PIN_37_MSDC0E_CLK__FUNC_MSDC0_CLK>;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_rst {
			pinmux = <MT2712_PIN_48_MSDC0E_RSTB__FUNC_MSDC0_RSTB>;
			bias-pull-up;
		};
	};

	mmc0_pins_uhs: mmc0@0{
		pins_cmd_dat {
			pinmux = <MT2712_PIN_45_MSDC0E_DAT0__FUNC_MSDC0_DAT0>,
				 <MT2712_PIN_44_MSDC0E_DAT1__FUNC_MSDC0_DAT1>,
				 <MT2712_PIN_43_MSDC0E_DAT2__FUNC_MSDC0_DAT2>,
				 <MT2712_PIN_42_MSDC0E_DAT3__FUNC_MSDC0_DAT3>,
				 <MT2712_PIN_41_MSDC0E_DAT4__FUNC_MSDC0_DAT4>,
				 <MT2712_PIN_40_MSDC0E_DAT5__FUNC_MSDC0_DAT5>,
				 <MT2712_PIN_39_MSDC0E_DAT6__FUNC_MSDC0_DAT6>,
				 <MT2712_PIN_38_MSDC0E_DAT7__FUNC_MSDC0_DAT7>,
				 <MT2712_PIN_46_MSDC0E_CMD__FUNC_MSDC0_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT2712_PIN_37_MSDC0E_CLK__FUNC_MSDC0_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_ds {
			pinmux = <MT2712_PIN_47_MSDC0E_DSL__FUNC_MSDC0_DSL>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_rst {
			pinmux = <MT2712_PIN_48_MSDC0E_RSTB__FUNC_MSDC0_RSTB>;
			bias-pull-up;
		};

	};

	mmc1_pins_default: mmc1default {
		pins_cmd_dat {
			pinmux = <MT2712_PIN_68_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
				 <MT2712_PIN_65_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
				 <MT2712_PIN_66_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
				 <MT2712_PIN_64_MSDC1_DAT3__FUNC_MSDC1_DAT3>,
				 <MT2712_PIN_69_MSDC1_CMD__FUNC_MSDC1_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT2712_PIN_63_MSDC1_CLK__FUNC_MSDC1_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_insert {
			pinmux = <MT2712_PIN_70_MSDC1_INS__FUNC_GPIO70>;
			input-enable;
			bias-pull-up;
		};
	};

	mmc1_pins_uhs: mmc1@0{
		pins_cmd_dat {
			pinmux = <MT2712_PIN_68_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
				 <MT2712_PIN_65_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
				 <MT2712_PIN_66_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
				 <MT2712_PIN_64_MSDC1_DAT3__FUNC_MSDC1_DAT3>,
				 <MT2712_PIN_69_MSDC1_CMD__FUNC_MSDC1_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT2712_PIN_63_MSDC1_CLK__FUNC_MSDC1_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};
	};

	mmc2_pins_default: mmc2default {
		pins_cmd_dat {
			pinmux = <MT2712_PIN_93_MSDC2_DAT0__FUNC_MSDC2_DAT0>,
				 <MT2712_PIN_92_MSDC2_DAT1__FUNC_MSDC2_DAT1>,
				 <MT2712_PIN_91_MSDC2_DAT2__FUNC_MSDC2_DAT2>,
				 <MT2712_PIN_90_MSDC2_DAT3__FUNC_MSDC2_DAT3>,
				 <MT2712_PIN_95_MSDC2_CMD__FUNC_MSDC2_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT2712_PIN_89_MSDC2_CLK__FUNC_MSDC2_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_insert {
			pinmux = <MT2712_PIN_94_MSDC2_INS__FUNC_GPIO94>;
			input-enable;
			bias-pull-up;
		};
	};

	mmc2_pins_uhs: mmc2@0{
		pins_cmd_dat {
			pinmux = <MT2712_PIN_93_MSDC2_DAT0__FUNC_MSDC2_DAT0>,
				 <MT2712_PIN_92_MSDC2_DAT1__FUNC_MSDC2_DAT1>,
				 <MT2712_PIN_91_MSDC2_DAT2__FUNC_MSDC2_DAT2>,
				 <MT2712_PIN_90_MSDC2_DAT3__FUNC_MSDC2_DAT3>,
				 <MT2712_PIN_95_MSDC2_CMD__FUNC_MSDC2_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT2712_PIN_89_MSDC2_CLK__FUNC_MSDC2_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};
	};

	pcie_pinctl0: pcie0 {
		pcie0 {
			pinmux = <MT2712_PIN_204_PERSTB_P0__FUNC_PERST_B_P0>,
			<MT2712_PIN_205_CLKREQN_P0__FUNC_CLKREQ_N_P0>,
			<MT2712_PIN_206_WAKEEN_P0__FUNC_WAKE_EN_P0>,
			/* following three pins are for EP */
			<MT2712_PIN_207_PERSTB_P1__FUNC_PERST_B_P1>,
			<MT2712_PIN_208_CLKREQN_P1__FUNC_CLKREQ_N_P1>,
			<MT2712_PIN_209_WAKEEN_P1__FUNC_WAKE_EN_P1>;
		};
	};

	spi_pins_0: spi0@0 {
		pins_spi {
			pinmux = <MT2712_PIN_153_SPI0_CSN__FUNC_SPI_CS_0_>,
				 <MT2712_PIN_154_SPI0_MI__FUNC_SPI_MI_0_>,
				 <MT2712_PIN_155_SPI0_CK__FUNC_SPI_CK_0_>,
				 <MT2712_PIN_156_SPI0_MO__FUNC_SPI_MO_0_>;
			bias-disable;
		};
	};

	spi_pins_2: spi2@0 {
		pins_spi {
			pinmux = <MT2712_PIN_127_SPI2_CSN__FUNC_SPI_CS_2_>,
				 <MT2712_PIN_128_SPI2_MO__FUNC_SPI_MO_2_>,
				 <MT2712_PIN_129_SPI2_MI__FUNC_SPI_MI_2_>,
				 <MT2712_PIN_130_SPI2_CK__FUNC_SPI_CK_2_>;
			bias-disable;
		};
	};

	spi_pins_3: spi3@0 {
		pins_spi {
			pinmux = <MT2712_PIN_131_SPI3_CSN__FUNC_SPI_CS_3_>,
				 <MT2712_PIN_132_SPI3_MO__FUNC_SPI_MO_3_>,
				 <MT2712_PIN_133_SPI3_MI__FUNC_SPI_MI_3_>,
				 <MT2712_PIN_134_SPI3_CK__FUNC_SPI_CK_3_>;
			bias-disable;
		};
	};

	spi_pins_4: spi4@0 {
		pins_spi0 {
			pinmux = <MT2712_PIN_165_SPI4_CSN__FUNC_SPI_CS_4_>,
				 <MT2712_PIN_166_SPI4_MI__FUNC_SPI_MI_4_>,
				 <MT2712_PIN_167_SPI4_MO__FUNC_SPI_MO_4_>,
				 <MT2712_PIN_168_SPI4_CK__FUNC_SPI_CK_4_>;
			bias-disable;
		};

		pins_spi1 {
			pinmux = <MT2712_PIN_161_SPI1_CSN__FUNC_SPI_CS_1_>,
				 <MT2712_PIN_162_SPI1_SI__FUNC_SPI_SI_1_>,
				 <MT2712_PIN_163_SPI1_CK__FUNC_SPI_CK_1_>,
				 <MT2712_PIN_164_SPI1_SO__FUNC_SPI_SO_1_>;
			bias-disable;
		};
	};

	spi_pins_5: spi5@0 {
		pins_spi {
			pinmux = <MT2712_PIN_157_SPI5_CSN__FUNC_SPI_CS_5_>,
				 <MT2712_PIN_158_SPI5_MI__FUNC_SPI_MI_5_>,
				 <MT2712_PIN_159_SPI5_MO__FUNC_SPI_MO_5_>,
				 <MT2712_PIN_160_SPI5_CK__FUNC_SPI_CK_5_>;
			bias-disable;
		};
	};
};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_0>;
	status = "okay";

	spidev0: spi@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <1000000>;
	};
};

&spi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_2>;
	status = "okay";

	spidev2: spi@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <1000000>;
	};
};

&spi3 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_3>;
	status = "okay";

	spidev3: spi@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <1000000>;
	};
};

&spi4 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_4>;
	status = "okay";

	spis: spi@0 {
		compatible = "mediatek,2712-spis";
		reg = <0>;
		interrupts = <GIC_SPI 283 IRQ_TYPE_LEVEL_LOW>;
		clocks = <&topckgen CLK_TOP_SPISLV_SEL>,
			 <&pericfg CLK_PERI_SPI1>;
		clock-names = "selclk", "spiclk";
		spi-max-frequency = <1000000>;
	};

};

&spi5 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_5>;
	status = "okay";

	spidev5: spi@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <1000000>;
	};
};

&uart0 {
	status = "okay";
};
